

----QUIT----(11 September 2022 19:10:09) CuisUniversity-5481.image priorSource: 2810882!

----STARTUP---- (11 September 2022 19:10:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5481.image!


----QUIT----(11 September 2022 19:10:10) CuisUniversity-5481.image priorSource: 7059465!

----STARTUP---- (22 September 2022 14:13:11) as /Users/nicpacheco/Desktop/Personales/isw1_intento2/macos64/CuisUniversity-5481.image!


----End fileIn of /Users/nicpacheco/Desktop/Personales/isw1_intento2/Parciales-master/2022-1c/1erParcial/ISW1-2022-1C-Parcial-1-Resolucion.st----!

!testRun: #FormulaOneTest #test01SectorLengthMustBePositive stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test02ACarCanNotBePlacedInAKilometerGreaterThanSectorLength stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test03CarCannotActivateTurboInNonTurboSector stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test04CarCannotActivateTurboWhenNoCarAhead stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test05CarCanActivateTurboWhenLessThanASecondBehindAnotherCar stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test06CarCannotActivateTurboWhenMoreThanASecondBehindAnotherCar stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test07TrackMustHaveSectors stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test08TheLengthOfATrackShouldBeTheSumOfItsSectors stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test09ACarCanNotBePlacedInAKilometerGreaterThanTrackLength stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test10TrackShouldPlaceCarInKilometerWithinSector stamp: 'n 9/22/2022 14:13:57'!
PASSED!

!testRun: #FormulaOneTest #test11TrackShouldKnowCarsInRunning stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test12CarCannotBeInMoreThanOneSectorAtATime stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test13GrandPrixLengthShouldBeTrackLengthTimesNumberOfLaps stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test14TwoCarsCanBeAtTheSameDistanceFromStart stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test15ACarStoppedShouldNotMoveAfterSomeTime stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test16ACarSpeedingShouldMoveAfterSomeTime stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test17GrandPrixKnowsSectorOfCar stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test18GrandPrixKnowsSectorOfCarAfterSomeTime stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test19GrandPrixMovesCarsBetweenSectors stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test20FirstTurboIncrementsSpeedByTwentyPercent stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test21SecondTurboSpeedsByTenPercent stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test22ThirdTurboSpeedsByFivePercent stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test23AfterThridTurbo_TurboIsExhausted stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test24CanNotActivateTurboWhenTurboIsActivated stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!testRun: #FormulaOneTest #test25CanNotDeactivateTurboWhenIsDeactivated stamp: 'n 9/22/2022 14:13:58'!
PASSED!

!classRemoval: #TurboDeactivated stamp: 'n 9/22/2022 14:14:02'!
TurboStatus subclass: #TurboDeactivated
	instanceVariableNames: 'next'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #TurboActivated stamp: 'n 9/22/2022 14:14:02'!
TurboStatus subclass: #TurboActivated
	instanceVariableNames: 'next speedingRatio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #TurboStatus stamp: 'n 9/22/2022 14:14:02'!
Object subclass: #TurboStatus
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #Track stamp: 'n 9/22/2022 14:14:03'!
Object subclass: #Track
	instanceVariableNames: 'sectors driversDistanceFromBeginning'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #TurboSector stamp: 'n 9/22/2022 14:14:03'!
Sector subclass: #TurboSector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #NoTurboSector stamp: 'n 9/22/2022 14:14:03'!
Sector subclass: #NoTurboSector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #Sector stamp: 'n 9/22/2022 14:14:04'!
Object subclass: #Sector
	instanceVariableNames: 'cars length'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #GrandPrix stamp: 'n 9/22/2022 14:14:04'!
Object subclass: #GrandPrix
	instanceVariableNames: 'track numberOfLaps'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #FormulaOneCar stamp: 'n 9/22/2022 14:14:04'!
Object subclass: #FormulaOneCar
	instanceVariableNames: 'grandPrix driver speed traveledDistance currentSector turboStatus'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

!classRemoval: #FormulaOneTest stamp: 'n 9/22/2022 14:14:05'!
TestCase subclass: #FormulaOneTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-1C-Parcial-1'!

----SNAPSHOT----(22 September 2022 14:28:38) CuisUniversity-5481.image priorSource: 7059698!

----End fileIn of /Users/nicpacheco/Downloads/ISW1-2022-2C-1erParcial.st----!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:08:04'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:08:04'!
PASSED!
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:23:17' prior: 50554149!
lastPosition
	"
	| acc ix |
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc"
	^ (steps sum:[:aStep|aStep] +startPosition ).
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:23:21'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:23:21'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:23:21'!
ERROR!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:23:21'!
ERROR!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:23:21'!
ERROR!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:23:21'!
ERROR!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:23:21'!
ERROR!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:23:21'!
ERROR!
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:23:37' prior: 50554230!
lastPosition
	
	| acc ix |
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc
	"^ (steps sum:[:aStep|aStep] +startPosition )."
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:23:39'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:23:39'!
PASSED!
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:24:10' prior: 50554265!
lastPosition
	
	
	"
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc"
	^ (steps sum:[:aStep|aStep] +startPosition ).
	
	! !
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:24:40' prior: 50554300!
lastPosition
	| acc  |
	
	"
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc"
	acc:= steps sum:[:aStep|aStep] .
	^(acc + startPosition)
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:24:43'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:24:43'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:24:43'!
ERROR!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:24:43'!
ERROR!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:24:43'!
ERROR!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:24:43'!
ERROR!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:24:43'!
ERROR!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:24:43'!
ERROR!

----End fileIn of /Users/nicpacheco/Desktop/Personales/isw1_intento2/macos64/Packages/TerseGuide.pck.st----!
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:26:36' prior: 50554310!
lastPosition
	
	
	"
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc"
	
	^steps inject: startPosition into:[:aStep :a| aStep+a ]
	
	! !
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:26:39' prior: 50557266!
lastPosition
	
	
	"
	
	acc := startPosition.
	ix := 1.
	
	[ix <= steps size] whileTrue: [
		acc := acc + (steps at: ix)	.
		ix := ix + 1.
	].

	^ acc"
	
	^steps inject: startPosition into:[:aStep :a| aStep+a ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:26:41'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:26:41'!
PASSED!
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:26:54' prior: 50557276!
lastPosition
	
	
	
	^steps inject: startPosition into:[:aStep :aPosition| aStep+aPosition ].
	
	! !
!Map methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:26:59' prior: 50557311!
lastPosition
	
	
	
	^steps inject: startPosition into:[:aPosition :aStep| aStep+aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:27:04'!
PASSED!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:28:41'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:28:41'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:28:41'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:28:41'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:28:42'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:28:42'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:28:42'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:28:42'!
PASSED!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:28:51' prior: 50554053!
clearTerrainAt: aPosition
"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	]."
	
! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:29:49' prior: 50557374!
clearTerrainAt: aPosition
"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	]."

	treesAt detect:[:pos | (aPosition = pos)]
! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:29:52' prior: 50557384!
clearTerrainAt: aPosition
"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	]."

	treesAt detect:[:pos | (aPosition = pos)]
	
! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:29:59'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:29:59'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:29:59'!
FAILURE!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:30:06'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:30:06'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:30:06'!
FAILURE!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:30:26' prior: 50557395!
clearTerrainAt: aPosition
"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	]."

	^treesAt detect:[:pos | (aPosition = pos)].
	
! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:30:34'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:30:34'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:30:34'!
FAILURE!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:31:21' prior: 50557463!
clearTerrainAt: aPosition

	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	].

	"^ treesAt detect:[:pos | (aPosition = pos)]."
	
! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:31:33' prior: 50557503!
clearTerrainAt: aPosition

	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	].

	
! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:32:24' prior: 50554077!
isEmptyAt: aPosition
	"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ false ].
		
		ix := ix + 1.
	].

	^ true"
	^ treesAt anySatisfy:[:pos | (aPosition = pos)]! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:32:35' prior: 50557524!
isEmptyAt: aPosition
	"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ false ].
		
		ix := ix + 1.
	].

	^ true"
	^ (treesAt anySatisfy:[:pos | (aPosition = pos)] not)! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:32:38'!
ERROR!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:32:38'!
ERROR!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:32:38'!
PASSED!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:33:16'!
ERROR!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:33:16'!
ERROR!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:33:16'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:33:34'!
ERROR!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:33:52'!
ERROR!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:34:13' prior: 50557535!
isEmptyAt: aPosition
	"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ false ].
		
		ix := ix + 1.
	].

	^ true"
	|a|
	a:= treesAt anySatisfy:[:pos | (aPosition = pos)].
	^ (a not)! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:35:05'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:35:05'!
PASSED!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:35:35' prior: 50557603!
isEmptyAt: aPosition
	"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ false ].
		
		ix := ix + 1.
	].

	^ true"
	^ (treesAt anySatisfy:[:pos | (aPosition = pos)]) not.! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:35:37'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:35:37'!
PASSED!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:35:43' prior: 50557639!
isEmptyAt: aPosition
	
	^ (treesAt anySatisfy:[:pos | (aPosition = pos)]) not.! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:37:20' prior: 50557514!
clearTerrainAt: aPosition

	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	].

	^treesAt remove: (treesAt detect:[:pos|(aPosition = pos) ]).

	
! !
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:37:23' prior: 50557681!
clearTerrainAt: aPosition
	"
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ treesAt removeIndex: ix ].
		
		ix := ix + 1.
	]."

	^treesAt remove: (treesAt detect:[:pos|(aPosition = pos) ]).

	
! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:37:26'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:37:26'!
PASSED!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:37:35' prior: 50557693!
clearTerrainAt: aPosition

	^treesAt remove: (treesAt detect:[:pos|(aPosition = pos) ]).

	
! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:37:36'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:37:36'!
PASSED!
!Island methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:40:09' prior: 50554091!
terrainAt: aPosition
	
	| ix |
	
	ix := 1.
	[ix <= treesAt size] whileTrue: [ | pos |
		pos := treesAt at: ix.
		(aPosition = pos) ifTrue: [ ^ #Tree ].		
		ix := ix + 1.
	].

	ix := 1.
	[ix <= digsAt size] whileTrue: [ | pos |
		pos := digsAt at: ix.
		(aPosition = pos) ifTrue: [ ^ #Diggable ].
		ix := ix + 1.
	].

	^ #Empty.
	
	
! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:40:11'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:40:11'!
PASSED!

Pirate subclass: #Bucanero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classDefinition: #Bucanero category: 'ISW1-2022-2C-1erParcial' stamp: 'n 9/22/2022 17:41:34'!
Pirate subclass: #Bucanero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

Pirate subclass: #Corsario
	instanceVariableNames: 'rank map'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classDefinition: #Corsario category: 'ISW1-2022-2C-1erParcial' stamp: 'n 9/22/2022 17:41:40'!
Pirate subclass: #Corsario
	instanceVariableNames: 'rank map'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

Pirate subclass: #Filibustero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classDefinition: #Filibustero category: 'ISW1-2022-2C-1erParcial' stamp: 'n 9/22/2022 17:41:44'!
Pirate subclass: #Filibustero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:41:46'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:41:46'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:42:21' prior: 50553923!
buryTreasureAt: aPosition

	| ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	ix := 1.
	[ix <= pirates size] whileTrue: [ | pirate |
		pirate := pirates at: ix.
		
		(pirate isKindOf: Corsario) ifTrue: [ 

			terrain = #Diggable ifTrue: [ 				pirate drawTreasureMarkAt: aPosition ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [

			terrain = #Diggable ifTrue: [].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
		ix := ix + 1.
	].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:42:23'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:42:23'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'HAW 9/22/2022 16:16:45' prior: 50557861!
buryTreasureAt: aPosition

	| ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	ix := 1.
	[ix <= pirates size] whileTrue: [ | pirate |
		pirate := pirates at: ix.
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [].
			terrain = #Empty ifTrue: [].
			terrain = #Diggable ifTrue: [ 				pirate drawTreasureMarkAt: aPosition ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [].
			terrain = #Empty ifTrue: [].
			terrain = #Diggable ifTrue: [].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
		ix := ix + 1.
	].
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:43:04' prior: 50557912!
buryTreasureAt: aPosition

	| ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	ix := 1.
	[ix <= pirates size] whileTrue: [ | pirate |
		pirate := pirates at: ix.
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [].
			terrain = #Empty ifTrue: [].
			terrain = #Diggable ifTrue: [ 				pirate drawTreasureMarkAt: aPosition ].
		].
		
		
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
		ix := ix + 1.
	].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:43:06'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:43:06'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:43:18' prior: 50557941!
buryTreasureAt: aPosition

	| ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	ix := 1.
	[ix <= pirates size] whileTrue: [ | pirate |
		pirate := pirates at: ix.
		
		(pirate isKindOf: Corsario) ifTrue: [ 

			terrain = #Diggable ifTrue: [ 				pirate drawTreasureMarkAt: aPosition ].
		].
		
		
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
		ix := ix + 1.
	].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:43:20'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:43:20'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:44:20' prior: 50557991!
buryTreasureAt: aPosition

	| ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	ix := 1.
	[ix <= pirates size] whileTrue: [ | pirate |
		pirate := pirates at: ix.
		
		(pirate isKindOf: Corsario) ifTrue: [ 

			terrain = #Diggable ifTrue: [ 				pirate drawTreasureMarkAt: aPosition ].
		].
		
		
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
		ix := ix + 1.
	].
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:45:05' prior: 50558039!
buryTreasureAt: aPosition

	| terrain |
	
	terrain := island terrainAt: aPosition.
	

	pirates do: [ :aPirate |
		
		(aPirate isKindOf: Corsario) ifTrue: [ 

			terrain = #Diggable ifTrue: [ 				aPirate drawTreasureMarkAt: aPosition ].
		].
		
		
		
		(aPirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		].
		
	
	].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:45:07'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:45:07'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:46:33' prior: 50558062!
buryTreasureAt: aPosition

	| terrain |
	
	terrain := island terrainAt: aPosition.
	

	pirates do: [ :aPirate |
		"
		(aPirate isKindOf: Corsario) ifTrue: [ 

			terrain = #Diggable ifTrue: [ 				aPirate drawTreasureMarkAt: aPosition ].
		].
		
		
		
		(aPirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].
		]."
		aPirate xxx: aPosition in: island.
		
	
	].
	! !
!Pirate methodsFor: 'no messages' stamp: 'n 9/22/2022 17:47:01'!
xxx: aPosition in: island
	self subclassResponsibility ! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:47:10' overrides: 50558129!
xxx: aPosition in: island.! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:47:23' overrides: 50558129!
xxx: aPosition in: island.! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:48:29' prior: 50558134 overrides: 50558129!
xxx: aPosition in: island
	island = #Diggable ifTrue: [ 				self drawTreasureMarkAt: aPosition ].! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:48:50' prior: 50558143 overrides: 50558129!
xxx: aPosition in: island
	| terrain |
	
	terrain := island terrainAt: aPosition.
	
	terrain = #Diggable ifTrue: [ 				self drawTreasureMarkAt: aPosition ].! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:49:14' prior: 50558138 overrides: 50558129!
xxx: aPosition in: island
	island = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
			island = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
			island = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:49:32' prior: 50558159 overrides: 50558129!
xxx: aPosition in: island
	| terrain |
	
	terrain := island terrainAt: aPosition.
	terrain = #Tree ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ].
	terrain = #Empty ifTrue: [ self error: 'Arrgh!! I cannot dig this type of terrain!!' ]	.
	terrain = #Diggable ifTrue: [ island receiveTreasureAt: aPosition ].! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:49:45' prior: 50558108!
buryTreasureAt: aPosition

	| terrain |
	
	terrain := island terrainAt: aPosition.
	

	pirates do: [ :aPirate |
		
		aPirate xxx: aPosition in: island.
		
	
	].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:49:49'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:49:49'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:49:49'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:49:49'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:49:49'!
FAILURE!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:49:49'!
ERROR!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:49:49'!
ERROR!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:49:49'!
ERROR!
!Filibustero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:50:09' overrides: 50558129!
xxx: aPosition in: island! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:50:12'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:50:12'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:50:29' prior: 50558186!
buryTreasureAt: aPosition

	pirates do: [ :aPirate | aPirate xxx: aPosition in: island].
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:50:32'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:50:32'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:51:59' prior: 50553959!
moveTo: aPosition

	| acc ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	ix := 1.
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		ix := ix + 1.
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:52:05' prior: 50558280!
moveTo: aPosition

	| acc ix terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	ix := 1.
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:52:11' prior: 50558313!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:52:56'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:52:56'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:53:24' prior: 50558346!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ ^false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:53:31' prior: 50558403!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ ^false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:54:09' prior: 50558435!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := acc & false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:54:17' prior: 50558467!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := acc & false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:54:21' prior: 50558499!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 17:54:24'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 17:54:24'!
PASSED!
!Pirate methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:56:46'!
canMoveTo: aPosition in: island
	self subclassResponsibility ! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:56:50' overrides: 50558587!
canMoveTo: aPosition in: island! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:56:55' overrides: 50558587!
canMoveTo: aPosition in: island
! !
!Filibustero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:57:00' overrides: 50558587!
canMoveTo: aPosition in: island! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:58:18' prior: 50558597 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain:=0.
	terrain = #Tree ifTrue: [ ^false ].
	terrain = #Empty ifTrue: [ 
		self drawDirectionTo: aPosition.
		^true.
	].
	terrain = #Diggable ifTrue: [^true ].
! !
!Filibustero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:59:11' prior: 50558602 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain:=0.
	terrain = #Tree ifTrue: [ 
		island clearTerrainAt: aPosition.
		^false
	].
	terrain = #Empty ifTrue: [ ^true ].
	terrain = #Diggable ifTrue: [^true ].! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 17:59:46' prior: 50558592 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain:=0.
	terrain = #Tree ifTrue: [ ^false ].
	terrain = #Empty ifTrue: [ ^true ].
	terrain = #Diggable ifTrue: [^ true ].! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:00:08' prior: 50558531!
moveTo: aPosition

	| acc terrain |
	
	terrain := island terrainAt: aPosition.
	
	acc := true.
	
	
	pirates do:[ :pirate |
		pirate canMoveTo: aPosition in: island.
		"
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		"
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:00:22' prior: 50558638!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		pirate canMoveTo: aPosition in: island.
		"
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		"
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Bucanero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:00:28' prior: 50558629 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain := island terrainAt: aPosition.
	
	terrain = #Tree ifTrue: [ ^false ].
	terrain = #Empty ifTrue: [ ^true ].
	terrain = #Diggable ifTrue: [^ true ].! !
!Corsario methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:00:34' prior: 50558607 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain := island terrainAt: aPosition.
	
	terrain = #Tree ifTrue: [ ^false ].
	terrain = #Empty ifTrue: [ 
		self drawDirectionTo: aPosition.
		^true.
	].
	terrain = #Diggable ifTrue: [^true ].
! !
!Filibustero methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:00:39' prior: 50558618 overrides: 50558587!
canMoveTo: aPosition in: island
	|terrain|
	terrain := island terrainAt: aPosition.
	
	terrain = #Tree ifTrue: [ 
		island clearTerrainAt: aPosition.
		^false
	].
	terrain = #Empty ifTrue: [ ^true ].
	terrain = #Diggable ifTrue: [^true ].! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:00:42'!
FAILURE!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:00:42'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:00:42'!
PASSED!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:01:02'!
FAILURE!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:01:31' prior: 50558671!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		"
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		"
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:01:35'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:01:35'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:02:29' prior: 50558764!
moveTo: aPosition

	
	(pirates allSatisfy:[:aPirate | aPirate canMoveTo: aPosition in: island]) ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:02:33'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:02:33'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:02:33'!
FAILURE!

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:02:45'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:02:46'!
FAILURE!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:02:46'!
FAILURE!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:03:11'!
FAILURE!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:03:46' prior: 50558821!
moveTo: aPosition

	|a|
	a:=(pirates allSatisfy:[:aPirate | aPirate canMoveTo: aPosition in: island]).
	
	a ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:01:31' prior: 50558871!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		"
		(pirate isKindOf: Corsario) ifTrue: [ 
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ 
				pirate drawDirectionTo: aPosition.
				acc := acc & true 
			].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Filibustero) ifTrue: [
			terrain = #Tree ifTrue: [ 
				island clearTerrainAt: aPosition.
				acc := false
			].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		
		(pirate isKindOf: Bucanero) ifTrue: [
			terrain = #Tree ifTrue: [ acc := false ].
			terrain = #Empty ifTrue: [ acc := acc & true ].
			terrain = #Diggable ifTrue: [ acc := acc & true ].
		].
		"
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:04:35'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:04:35'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:05:38' prior: 50558879!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		
		
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:03:46' prior: 50558936!
moveTo: aPosition

	|a|
	a:=(pirates allSatisfy:[:aPirate | aPirate canMoveTo: aPosition in: island]).
	
	a ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:05:38' prior: 50558946!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		
		
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:03:46' prior: 50558954!
moveTo: aPosition

	|a|
	a:=(pirates allSatisfy:[:aPirate | aPirate canMoveTo: aPosition in: island]).
	
	a ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:09:08'!
FAILURE!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:05:38' prior: 50558964!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		
		
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:10:21' prior: 50558975!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	
	acc:=pirates allSatisfy:[:pirate | pirate canMoveTo: aPosition in: island].
	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:10:24'!
FAILURE!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:10:24'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:10:24'!
FAILURE!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:05:38' prior: 50558985!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |
		acc:=acc & ( pirate canMoveTo: aPosition in: island).
		
		
		
	].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:11:51' prior: 50559024!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |acc:=acc & ( pirate canMoveTo: aPosition in: island)].

	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

!testRun: #CrewTest #test01MovingCrewToTreePlaceDoesNotMove stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test02MovingCrewToTreePlaceFilibusteroRemovesTree stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test03MovingCrewToFreePlace stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test04MovingCrewToFreePlaceCorsarioWritesDirectionInMap stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test05CrewCannotBuryTreasureIfBucaneroCannotDig stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test06CrewCanBuryTreasureIfBucaneroCanDig stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test07CaptainCanUseMap stamp: 'n 9/22/2022 18:11:53'!
PASSED!

!testRun: #CrewTest #test08SimplePirateCannotUseMap stamp: 'n 9/22/2022 18:11:53'!
PASSED!
!Crew methodsFor: 'as yet unclassified' stamp: 'n 9/22/2022 18:12:25' prior: 50559034!
moveTo: aPosition

	| acc  |
	
	acc := true.
	
	
	pirates do:[ :pirate |acc:=acc & ( pirate canMoveTo: aPosition in: island)].
	
	"nos movemos si todos pueden moverse"
	acc ifTrue: [ island crewAt: aPosition ].
	
	! !

----STARTUP---- (21 October 2022 10:23:19) as /Users/nicpacheco/Desktop/Personales/isw1_intento2/macos64/CuisUniversity-5481.image!


----End fileIn of /Users/nicpacheco/Downloads/portfolio_2/Portfolio-Solucion.st----!

----STARTUP---- (24 October 2022 19:37:57) as /Users/nicpacheco/Desktop/Personales/isw1_intento2/macos64/CuisUniversity-5481.image!


----End fileIn of /Users/nicpacheco/Downloads/MarsRover-WithHeading.st----!

TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogTest category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 19:56:19'!
TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'no messages' stamp: 'n 10/24/2022 19:57:20'!
test01DoesNotLogAnythingWhenNoMoves! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:57:27' prior: 50555179!
test01DoesNotLogAnythingWhenNoMoves
	! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:58:06'!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:59:04'!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:59:10'!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:59:19'!
west

	^ MarsRoverHeadingWest ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 19:59:34' prior: 50555184!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@2 heading: self north)! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:00:09' prior: 50555205!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' = marsRover movementLog.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:00:11'!
ERROR!
!MarsRover methodsFor: 'log' stamp: 'n 10/24/2022 20:00:28'!
movementLog
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'log' stamp: 'n 10/24/2022 20:00:37' prior: 50555225!
movementLog
	^''! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:00:39'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:00:39'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:02:27'!
test02LogMovementForward
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' = marsRover movementLog.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:03:05' prior: 50555239!
test02LogMovementForward
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '1@2' = marsRover movementLog.! !

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:03:11'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 20:04:07'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 20:04:05' prior: 50554869!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log:= ''.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:05:25' prior: 50554933!
moveNorth
	position := position + (0@1).
	log:= '1@2'! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:05:26' prior: 50555273!
moveNorth
	position := position + (0@1).
	log:= '1@2'.! !

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:05:32'!
FAILURE!

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:05:32'!
FAILURE!

marsRover movementLog!
!MarsRover methodsFor: 'log' stamp: 'n 10/24/2022 20:06:31' prior: 50555229!
movementLog
	^log! !

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:06:35'!
FAILURE!

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:06:35'!
FAILURE!

marsRover movementLog!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:07:41' prior: 50555247!
test02LogMovementForward
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:07:42'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:07:42'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:08:07'!
test02LogMovementForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.! !

!methodRemoval: MarsRoverLogTest #test02LogMovementForward stamp: 'n 10/24/2022 20:08:07'!
test02LogMovementForward
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:08:22'!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.! !

!methodRemoval: MarsRoverLogTest #test02LogMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:08:22'!
test02LogMovementForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:08:33'!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: '1@2' = marsRover movementLog.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:08:45' prior: 50555350!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	self assert: '1@2 1@3' = marsRover movementLog.! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:08:47'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:09:51' prior: 50555278!
moveNorth
	position := position + (0@1).
	log:= log,' ', position x.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:10:18' prior: 50555371!
moveNorth
	position := position + (0@1).
	log add position.! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 20:10:35' prior: 50555266!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:10:51' prior: 50555214!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert:  0 = marsRover movementLog size.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:10:52'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:11:50' prior: 50555332!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	self assert: ((1 = marsRover movementLog size) and: (marsRover movementLog includes: 1@2)).! !

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:11:51'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:11:51'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:12:17' prior: 50555376!
moveNorth
	position := position + (0@1).
	log add: position.! !

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:12:20'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:12:22'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:14:05' prior: 50555359!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: ((marsRover movementLog at: 1) = 1@2 and: ((marsRover movementLog at: 2) = 1@3)).! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:07'!
ERROR!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:07'!
ERROR!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:15'!
ERROR!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:15'!
ERROR!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:31'!
ERROR!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:14:46' prior: 50555430!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@3))).! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:47'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:14:49'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:14:49'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:14:49'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:15:18' prior: 50555458!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@1))).! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:15:19'!
ERROR!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:15:19'!
ERROR!

marsRover movementLog!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:16:31' prior: 50555483!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@1))).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:17:43' prior: 50555502!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@1))).! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:17:50'!
FAILURE!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:17:50'!
FAILURE!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:17:56'!
FAILURE!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:17:56'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:14:46' prior: 50555513!
test03LogTwoMovementsForwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@3))).! !

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:18:11'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:18:54'!
test04LogOneMovementForwardAndOneBackwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@3))).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:19:12' prior: 50555552!
test04LogOneMovementForwardAndOneBackwardHeadinNorth
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@1))).! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:19:37' prior: 50554937!
moveSouth
	
	position := position + (0@-1).
	log add: position.! !

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:19:51'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:22:59'!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: ((marsRover movementLog at: 1) = (1@2) and: ((marsRover movementLog at: 2) = (1@1))).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:25:49' prior: 50555584!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover movementLog at: 1) = 'north' .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:26:44'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:26:52' prior: 50555596!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover movementLogDirection at: 1) = 'north' .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:26:57'!
ERROR!

Object subclass: #MarsRover
	instanceVariableNames: 'position head log logDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 20:27:07'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log logDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 20:27:15' prior: 50555381!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:28:11' prior: 50555418!
moveNorth
	position := position + (0@1).
	log add: position.
	logDirection add: head.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:28:36' prior: 50555610!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover logDirection at: 1) = 'north' .! !
!MarsRover methodsFor: 'log' stamp: 'n 10/24/2022 20:28:54'!
logDirection
	^logDirection! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:28:59'!
FAILURE!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:31:39'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:32:31' prior: 50555651!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover logDirection at: 1) = MarsRoverHeadingNorth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:32:36'!
FAILURE!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:32:36'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:32:40' prior: 50555672!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover logDirection at: 1) class= MarsRoverHeadingNorth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:32:43'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:35:06'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:35:06'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:35:06'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:35:06'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:35:06'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:35:14'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:35:14'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:35:14'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:35:14'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:35:14'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:39:08' prior: 50555690!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: (marsRover logDirection at: 1) class= MarsRoverHeadingNorth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:39:09'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:39:09'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:39:09'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:39:09'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:39:09'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:39:09'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:39:12' prior: 50555740!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: (marsRover logDirection at: 2) class= MarsRoverHeadingNorth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:39:13'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:39:13'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:39:13'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:39:13'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:39:13'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:39:13'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:39:19' prior: 50555772!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ffb'.
	
	self assert: (marsRover logDirection at: 2) class= MarsRoverHeadingNorth .! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:39:23' prior: 50555804!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ffb'.
	
	self assert: (marsRover logDirection at: 2) class= MarsRoverHeadingSouth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:39:24'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:40:42'!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingSouth)).! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:41:15' prior: 50555575!
moveSouth
	
	position := position + (0@-1).
	log add: position.
	logDirection add: head.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:41:22'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:41:24'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:41:25'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:41:26'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:41:27'!
FAILURE!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:41:27'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:41:41' prior: 50555815!
test05LogHeadingWithOneMovementForwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: (marsRover logDirection at: 1) class= MarsRoverHeadingNorth .! !

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:41:42'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:41:45'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:41:45'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:43:31' prior: 50555842!
moveSouth
	
	position := position + (0@-1).
	log add: position.
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:43:38' prior: 50554929!
moveForward
	
	head moveForward
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:43:45' prior: 50554921!
moveBackward
	
	head moveBackward
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:43:58' prior: 50555645!
moveNorth
	position := position + (0@1).
	log add: position.! !

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:44:09'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:44:10'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:44:12'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:44:12'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:50:00' prior: 50555389!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: ''.
	self assert:  0 = marsRover movementLog size.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:50:01'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:01'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:01'!
FAILURE!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:50:05'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:50:07'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:50:08'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:50:09'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:50:10'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:12'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:12'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:50:25' prior: 50555829!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:28'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:50:42' prior: 50555994!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:43'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:50:47' prior: 50556012!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:49'!
ERROR!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:50:54' prior: 50556052!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fbb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:50:55'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:02' prior: 50556070!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fbb'.
	
	self assert: (((marsRover logDirection at: 3) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:51:03'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:11' prior: 50556110!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'ff'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:14' prior: 50556150!
test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:36'!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:42' prior: 50556176!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:51:43'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:51:43'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:50' prior: 50556189!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:51:51'!
FAILURE!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:51:51'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:51:56' prior: 50556211!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:51:58'!
ERROR!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:52:03' prior: 50556233!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:52:04'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:52:04'!
ERROR!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:52:04'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:52:44' prior: 50555902!
moveBackward
	
	head moveBackward
	! !

!methodRemoval: MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth stamp: 'n 10/24/2022 20:52:48'!
test06LogHeadingWithOneMovementForwardAndRotateLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:52:55'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 20:53:09' prior: 50556294!
moveBackward
	
	head moveBackward.
	
	logDirection add: head.
	! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:53:12'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:53:12'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:53:12'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:53:12'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:53:12'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:53:12'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:54:40'!
test07LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:54:45'!
test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:54:49' prior: 50556356!
test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:54:56' prior: 50556369!
test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:54:59'!
ERROR!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:54:59'!
ERROR!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:55:03' prior: 50556382!
test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:55:04'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 20:56:21' prior: 50554887!
headWest
	
	head := MarsRoverHeadingWest for: self .
	
	logDirection add: head.! !

!methodRemoval: MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:56:31'!
test07LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fb'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:56:32'!
FAILURE!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:56:32'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:56:54' prior: 50556403!
test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:56:56'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:57:31'!
test08LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:57:35'!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:57:40' prior: 50556478!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:57:42'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 20:58:02' prior: 50554875!
headEast
	
	head := MarsRoverHeadingEast for: self.
	
	logDirection add: head.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
PASSED!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
FAILURE!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:58:05'!
FAILURE!

!methodRemoval: MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:58:13'!
test08LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingWest)).!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:58:14'!
FAILURE!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:58:14'!
FAILURE!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 20:58:17'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 20:58:34' prior: 50556491!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fr'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 20:58:35'!
PASSED!

----SNAPSHOT----(24 October 2022 20:58:51) CuisUniversity-5481.image priorSource: 7102500!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:01:28' prior: 50556579!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'frl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:01:30'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:02:42' prior: 50554879!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	logDirection add: head.! !

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:02:45'!
FAILURE!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:02:45'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:02:52' prior: 50556616!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:04:15' prior: 50555897!
moveForward
	
	head moveForward
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:04:21' prior: 50556630!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:04:29' prior: 50556316!
moveBackward
	
	head moveBackward.
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:04:35' prior: 50554883!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	logDirection add: head.
	! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:04:39'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:04:40'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 21:04:41'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 21:04:44'!
ERROR!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 21:04:44'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:17' prior: 50556508!
headEast
	
	head := MarsRoverHeadingEast for: self.
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:25' prior: 50556639!
headNorth
	
	head := MarsRoverHeadingNorth for: self .! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:33' prior: 50556649!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:35' prior: 50556420!
headWest
	
	head := MarsRoverHeadingWest for: self .
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:41' prior: 50554891!
rotateLeft
	
	head rotateLeft.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:44' prior: 50554895!
rotateRight
	
	head rotateRight.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:06:51' prior: 50556635!
moveForward
	
	head moveForward.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:06:54' prior: 50556645!
moveBackward
	
	head moveBackward.
	
	logDirection add: head.
	! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:07:08'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:07:10'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 21:07:11'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 21:07:12'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 21:07:13'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 21:07:15'!
PASSED!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 21:07:17'!
PASSED!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:07:19'!
FAILURE!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:07:19'!
FAILURE!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:07:40' prior: 50556599!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fr'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:07:42'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'n 10/24/2022 21:14:56'!
PASSED!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test03LogTwoMovementsForwardHeadinNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test04LogOneMovementForwardAndOneBackwardHeadinNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test05LogHeadingWithOneMovementForwardHeadingNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test06LogHeadingWithOneMovementForwardAndOneBackwardHeadingNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test07LogHeadingWithOneMovementForwardAndOneLeftHeadingNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!testRun: #MarsRoverLogTest #test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth stamp: 'n 10/24/2022 21:14:59'!
PASSED!

!classDefinition: #PositionDirectionLogger category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 21:22:45'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:23:01' prior: 50555929!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = marsRover movementLog size.! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:38'!
initializeAt: aPosition heading: aHeadingType logger: logger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:23:38' prior: 50554973!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger! !

!methodRemoval: MarsRover #initializeAt:heading: stamp: 'n 10/24/2022 21:23:38'!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:45' prior: 50556871!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 21:23:59'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log logDirection logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:53' prior: 50556896!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.
	logger:= aLogger.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:24:47'!
at: aPosition heading: aHeadingType logger: logger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger! !

!methodRemoval: MarsRover class #at:heading: stamp: 'n 10/24/2022 21:24:47'!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger!
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:24:54' prior: 50556924!
at: aPosition heading: aHeadingType logger: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:25:13' prior: 50556861!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = marsRover movementLog size.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:25:14'!
ERROR!

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:25:14'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:25:57'!
at: aPosition heading: aHeadingType with: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger! !

!methodRemoval: MarsRover class #at:heading:logger: stamp: 'n 10/24/2022 21:25:59'!
at: aPosition heading: aHeadingType logger: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:14' prior: 50556945!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = (logger positions) size.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:27:19'!
ERROR!

Object subclass: #PositionDirectionLogger
	instanceVariableNames: 'positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionDirectionLogger category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 21:27:28'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: 'positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionDirectionLogger methodsFor: 'no messages' stamp: 'n 10/24/2022 21:27:37'!
positions
	^positions ! !
!PositionDirectionLogger methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:50' overrides: 16920235!
initialize
	positions:= OrderedCollection new.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:28:09'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:28:22' prior: 50556976!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  0 = (logger positions) size.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:28:48' prior: 50557016!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  (1 = (logger positions) size and:  (logger positions at:1 = 1@2)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:14' prior: 50557027!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = (logger positions) size.! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/24/2022 21:29:03'!
PASSED!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:09' prior: 50555401!
test02LogOneMovementForwardHeadinNorth
	
	
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  (1 = (logger positions) size and:  (logger positions at:1 = 1@2)).! !

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:29:11'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:29:11'!
ERROR!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:28' prior: 50557053!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  ( (1 = (logger positions) size) and:  (logger positions at:1 = 1@2)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:34' prior: 50557072!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  ( (1 = (logger positions) size) and:  ((logger positions at:1) = 1@2)).! !

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:29:38'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/24/2022 21:29:38'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:29:57' prior: 50556914!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.

	logger:= aLogger.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/24/2022 21:30:03'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:18' prior: 50556711!
moveBackward
	
	head moveBackward.
	
	! !

!methodRemoval: MarsRover #logDirection stamp: 'n 10/24/2022 21:30:32'!
logDirection
	^logDirection!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:39' prior: 50556706!
moveForward
	
	head moveForward.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:47' prior: 50555907!
moveNorth
	position := position + (0@1).! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:50' prior: 50555892!
moveSouth
	
	position := position + (0@-1).
	! !

!methodRemoval: MarsRover #movementLog stamp: 'n 10/24/2022 21:31:21'!
movementLog
	^log!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:33:47' prior: 50557138!
moveSouth
	
	position := position + (0@-1).
	logger logPosition: position.
	! !

----STARTUP---- (26 October 2022 23:03:28) as /Users/nicpacheco/Desktop/Personales/isw1_intento2/macos64/CuisUniversity-5481.image!

!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:01:28' prior: 50556579!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'frl'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingNorth)).! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:02:42' prior: 50554879!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	logDirection add: head.! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:02:52' prior: 50557168!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:04:15' prior: 50555897!
moveForward
	
	head moveForward
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:04:21' prior: 50557174!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:04:29' prior: 50556316!
moveBackward
	
	head moveBackward.
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:04:35' prior: 50554883!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	logDirection add: head.
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:17' prior: 50556508!
headEast
	
	head := MarsRoverHeadingEast for: self.
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:25' prior: 50557183!
headNorth
	
	head := MarsRoverHeadingNorth for: self .! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:33' prior: 50557193!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:35' prior: 50556420!
headWest
	
	head := MarsRoverHeadingWest for: self .
	! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:41' prior: 50554891!
rotateLeft
	
	head rotateLeft.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/24/2022 21:06:44' prior: 50554895!
rotateRight
	
	head rotateRight.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:06:51' prior: 50557179!
moveForward
	
	head moveForward.
	
	logDirection add: head.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:06:54' prior: 50557189!
moveBackward
	
	head moveBackward.
	
	logDirection add: head.
	! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:07:40' prior: 50557155!
test08LogHeadingWithOneMovementForwardAndOneRightHeadingNorth
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'fr'.
	
	self assert: (((marsRover logDirection at: 1) class= MarsRoverHeadingNorth) and: ((marsRover logDirection at: 2) class= MarsRoverHeadingEast)).! !

!classDefinition: #PositionDirectionLogger category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:23:01' prior: 50555929!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = marsRover movementLog size.! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:38'!
initializeAt: aPosition heading: aHeadingType logger: logger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:23:38' prior: 50554973!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger! !

!methodRemoval: MarsRover #initializeAt:heading: stamp: 'n 10/26/2022 23:03:43'!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:45' prior: 50557271!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log logDirection logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:23:53' prior: 50557296!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.
	log:= OrderedCollection new.
	logDirection:= OrderedCollection new.
	logger:= aLogger.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:24:47'!
at: aPosition heading: aHeadingType logger: logger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger! !

!methodRemoval: MarsRover class #at:heading: stamp: 'n 10/26/2022 23:03:43'!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType logger: logger!
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:24:54' prior: 50557324!
at: aPosition heading: aHeadingType logger: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:25:13' prior: 50557261!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = marsRover movementLog size.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'n 10/24/2022 21:25:57'!
at: aPosition heading: aHeadingType with: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger! !

!methodRemoval: MarsRover class #at:heading:logger: stamp: 'n 10/26/2022 23:03:43'!
at: aPosition heading: aHeadingType logger: aLogger 
	
	^self new initializeAt: aPosition heading: aHeadingType logger: aLogger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:14' prior: 50557345!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = (logger positions) size.! !

!classDefinition: #PositionDirectionLogger category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: 'positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionDirectionLogger category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: 'positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionDirectionLogger methodsFor: 'no messages' stamp: 'n 10/24/2022 21:27:37'!
positions
	^positions ! !
!PositionDirectionLogger methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:50' overrides: 16920235!
initialize
	positions:= OrderedCollection new.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:28:22' prior: 50557369!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  0 = (logger positions) size.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:28:48' prior: 50557406!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  (1 = (logger positions) size and:  (logger positions at:1 = 1@2)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:27:14' prior: 50557417!
test01DoesNotLogAnythingWhenNoMoves
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: ''.
	self assert:  0 = (logger positions) size.! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:09' prior: 50555401!
test02LogOneMovementForwardHeadinNorth
	
	
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  (1 = (logger positions) size and:  (logger positions at:1 = 1@2)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:28' prior: 50557440!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  ( (1 = (logger positions) size) and:  (logger positions at:1 = 1@2)).! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'n 10/24/2022 21:29:34' prior: 50557452!
test02LogOneMovementForwardHeadinNorth
	
	| marsRover logger|
	logger:= PositionDirectionLogger new.
	marsRover := MarsRover at: 1@1 heading: self north with: logger. 
	marsRover process: 'f'.
	self assert:  ( (1 = (logger positions) size) and:  ((logger positions at:1) = 1@2)).! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/24/2022 21:29:57' prior: 50557314!
initializeAt: aPosition heading: aHeadingType logger: aLogger 

	position := aPosition.
	head := aHeadingType for: self.

	logger:= aLogger.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:03:43'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:18' prior: 50557234!
moveBackward
	
	head moveBackward.
	
	! !

!methodRemoval: MarsRover #logDirection stamp: 'n 10/26/2022 23:03:43'!
logDirection
	^logDirection!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:39' prior: 50557229!
moveForward
	
	head moveForward.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:47' prior: 50555907!
moveNorth
	position := position + (0@1).! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:30:50' prior: 50555892!
moveSouth
	
	position := position + (0@-1).
	! !

!methodRemoval: MarsRover #movementLog stamp: 'n 10/26/2022 23:03:43'!
movementLog
	^log!
!MarsRover methodsFor: 'moving' stamp: 'n 10/24/2022 21:33:47' prior: 50557514!
moveSouth
	
	position := position + (0@-1).
	logger logPosition: position.
	! !

!testRun: #MarsRoverLogTest #test01DoesNotLogAnythingWhenNoMoves stamp: 'n 10/26/2022 23:03:52'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/26/2022 23:03:54'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogOneMovementForwardHeadinNorth stamp: 'n 10/26/2022 23:03:54'!
ERROR!

!classRemoval: #PositionDirectionLogger stamp: 'n 10/26/2022 23:04:25'!
Object subclass: #PositionDirectionLogger
	instanceVariableNames: 'positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingWest stamp: 'n 10/26/2022 23:04:25'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'n 10/26/2022 23:04:25'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'n 10/26/2022 23:04:26'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingEast stamp: 'n 10/26/2022 23:04:26'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeading stamp: 'n 10/26/2022 23:04:26'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRover stamp: 'n 10/26/2022 23:04:26'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverTest stamp: 'n 10/26/2022 23:04:27'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogTest stamp: 'n 10/26/2022 23:04:27'!
TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----End fileIn of /Users/nicpacheco/Downloads/MarsRover-WithHeading.st----!

TestCase subclass: #MarsRoverObserverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserverTest category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:22:49'!
TestCase subclass: #MarsRoverObserverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserverTest methodsFor: 'no messages' stamp: 'n 10/26/2022 23:23:29'!
test01MarsRoverWithNoMovementsLogsNothing
! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:24:20'!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:24:28'!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:24:34'!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:24:42'!
west

	^ MarsRoverHeadingWest ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:25:32' prior: 50558098!
test01MarsRoverWithNoMovementsLogsNothing
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading:1. 
	
	marsRover process: ''.
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:25:51' prior: 50558120!
test01MarsRoverWithNoMovementsLogsNothing
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading:1. 
	
	marsRover process: ''.
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:25:59' prior: 50558128!
test01MarsRoverWithNoMovementsLogsNothing
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading:self north. 
	
	marsRover process: ''.
	! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:31:09'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:31:04'!
test01MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:31:15'!
ERROR!

Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:31:29'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'heading' stamp: 'n 10/26/2022 23:31:53'!
addLogger: aClousure
	logger:=aClousure! !

!methodRemoval: MarsRoverObserverTest #test01MarsRoverWithNoMovementsLogsNothing stamp: 'n 10/26/2022 23:32:00'!
test01MarsRoverWithNoMovementsLogsNothing
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading:self north. 
	
	marsRover process: ''.
	!
!Logger methodsFor: 'no messages' stamp: 'n 10/26/2022 23:32:15' overrides: 16920235!
initialize! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'n 10/26/2022 23:32:28'!
Object subclass: #Logger
	instanceVariableNames: 'logs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:32:32' prior: 50558191 overrides: 16920235!
initialize
	logs := OrderedCollection new.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:32:49'!
addLog: aPosition
	logs add:aPosition.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:33:00'!
logs
	^logs! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:33:05'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:34:02'!
test02MarsRoverWithMovementOneForwardHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:35:10' prior: 50558218!
test02MarsRoverWithMovementOneForwardHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	marsRover process: 'f'.
	
	self assert: (( 1 = logger logs size) and: ( (logger logs at: 1) = 1@2)).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithMovementOneForwardHeadingNorth stamp: 'n 10/26/2022 23:35:19'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithMovementOneForwardHeadingNorth stamp: 'n 10/26/2022 23:35:19'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:35:49' prior: 50558207!
addLog: aPosition
	logs add:aPosition.! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithMovementOneForwardHeadingNorth stamp: 'n 10/26/2022 23:36:03'!
ERROR!

!methodRemoval: MarsRoverObserverTest #test02MarsRoverWithMovementOneForwardHeadingNorth stamp: 'n 10/26/2022 23:36:24'!
test02MarsRoverWithMovementOneForwardHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	marsRover process: 'f'.
	
	self assert: (( 1 = logger logs size) and: ( (logger logs at: 1) = 1@2)).
	
	!

!methodRemoval: Logger #initialize stamp: 'n 10/26/2022 23:36:31'!
initialize
	logs := OrderedCollection new.!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:37:06' prior: 50558251!
addLog: aPosition
	logs add:aPosition.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:37:18' prior: 50558277!
addLog: aPosition
	OrderedCollection new.! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:37:28'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:37:55' prior: 50558282!
addLog: aPosition
! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:38:07' prior: 50558211!
logs
	^OrderedCollection new.! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:38:10'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:38:14'!
test02MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:38:32'!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !

!methodRemoval: MarsRoverObserverTest #test02MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:38:32'!
test02MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:38:46' prior: 50558313!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	marsRover process:'f'.
	
	self assert: 0 = logger logs size.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:39:46' prior: 50558336!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | self addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = 1@2)).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:41:12'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/26/2022 23:44:19' prior: 50557852!
moveNorth
	
	position := position + (0@1).
	logger value.! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:44:27'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:44:27'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:44:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:44:59'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:44:59'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/26/2022 23:46:32' prior: 50558364!
moveNorth
	
	position := position + (0@1).
	logger position value.! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:46:37'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:46:37'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/26/2022 23:46:49' prior: 50558387!
moveNorth
	
	position := position + (0@1).
	logger value.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/26/2022 23:47:19' prior: 50558399!
moveNorth
	
	position := position + (0@1).
	logger value: position.! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:47:22'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:47:22'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:47:54' prior: 50558348!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = 1@2)).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:47:56'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:47:56'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:48:29' prior: 50558294!
logs
	^logs.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:48:42' overrides: 16920235!
initialize
	logs:= OrderedCollection new.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:48:51' prior: 50558290!
addLog: aPosition
	logs add:aPosition! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:48:54'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:48:54'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:49:53'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:50:09' prior: 50558417!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:50:10'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:50:41' prior: 50558462!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@3) )).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:50:42'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:50:47' prior: 50558479!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:06'!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:12'!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !

!methodRemoval: MarsRoverObserverTest #test02MarsRoverWithNOneMovementForward stamp: 'n 10/26/2022 23:51:12'!
test02MarsRoverWithNOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:14' prior: 50558522!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:20' prior: 50558548!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 1) = (1@3) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:27' prior: 50558561!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:34' prior: 50558509!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 1) = (1@3) )).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:51:35'!
FAILURE!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForward stamp: 'n 10/26/2022 23:51:38'!
FAILURE!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForward stamp: 'n 10/26/2022 23:51:38'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:46' prior: 50558574!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForward stamp: 'n 10/26/2022 23:51:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:51:49'!
FAILURE!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:51:49'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:51:57' prior: 50558587!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) )).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:51:59'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:53:01' prior: 50558635!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)) )).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:53:03'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:53:06' prior: 50558652!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:53:31'!
test02MarsRoverWithOneMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !

!methodRemoval: MarsRoverObserverTest #test02MarsRoverWithOneMovementForward stamp: 'n 10/26/2022 23:53:31'!
test02MarsRoverWithOneMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:53:43'!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!methodRemoval: MarsRoverObserverTest #test03MarsRoverWithTwoMovementForward stamp: 'n 10/26/2022 23:53:43'!
test03MarsRoverWithTwoMovementForward	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:54:01' prior: 50558710!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ffb'.
	
	self assert: (3 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/26/2022 23:54:02'!
FAILURE!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/26/2022 23:54:02'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:54:09' prior: 50558739!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/26/2022 23:54:11'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:54:22'!
test04MarsRoverWithTwoMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:54:32'!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:54:47' prior: 50558795!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:54:50'!
ERROR!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:54:50'!
ERROR!

!methodRemoval: MarsRoverObserverTest #test04MarsRoverWithTwoMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:54:52'!
test04MarsRoverWithTwoMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:54:56'!
ERROR!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:54:56'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/26/2022 23:59:09' prior: 50557856!
moveSouth
	
	position := position + (0@-1).
	logger value: position.! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/26/2022 23:59:15'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/26/2022 23:59:16'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/26/2022 23:59:16'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:16'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:59:30' prior: 50558810!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 3) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:32'!
FAILURE!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:32'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:59:40' prior: 50558884!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:43'!
FAILURE!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/26/2022 23:59:43'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:00:06' prior: 50558908!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger test|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	test:=  logger logs .
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:00:32' prior: 50558932!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger test|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	test:=  logger logs .
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 3) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:00:35' prior: 50558948!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger test|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	test:=  logger logs .
	self assert: (3 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 3) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:00:38'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:00:06' prior: 50558964!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger test|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fbf'.
	test:=  logger logs .
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:01:02' prior: 50558984!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:01:03'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:02:01'!
test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:02:09'!
test05MarsRoverWithOneMovementForwardALeftRotationAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:02:12' prior: 50559034!
test05MarsRoverWithOneMovementForwardALeftRotationAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:03:09'!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!methodRemoval: MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardALeftRotationAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:03:09'!
test05MarsRoverWithOneMovementForwardALeftRotationAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:03:20' prior: 50559065!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (0@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:03:23'!
ERROR!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:03:23'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:03:36' prior: 50557860!
moveWest
	
	position := position + (-1@0).
	logger value: position.! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:03:40'!
ERROR!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:03:40'!
ERROR!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:04:15'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:04:29' prior: 50559097!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:04:30'!
ERROR!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:04:30'!
ERROR!

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:04:48' prior: 50559141!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:05:01' prior: 50559121!
moveWest
	
	position := position + (-1@0).
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:05:06' prior: 50557844!
moveEast
	
	position := position + (1@0).
	logger value: position.! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:05:09'!
FAILURE!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:05:09'!
FAILURE!

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:05:44' prior: 50559167!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:05:45'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:05:56'!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:06:05' prior: 50559202!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:06:15' prior: 50559222!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:06:49' prior: 50559254!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:06:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:06:51'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:07:00' prior: 50559182!
moveWest
	
	position := position + (-1@0).
	logger value: position.
	! !

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:07:04'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:07:14' prior: 50559270!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flfb'.
	
	self assert: (3 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:07:50' prior: 50559305!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:10:12'!
test08MarsRoverWithNoChangeHeadingLogsNothing
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:10:25' prior: 50559336!
test08MarsRoverWithNoChangeHeadingLogsNothing
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:10:46' prior: 50559351!
test08MarsRoverWithNoChangeHeadingLogsNothing
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:''.
	
	self assert: 0 = logger logs size.
	
	! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithNoChangeHeadingLogsNothing stamp: 'n 10/27/2022 00:10:47'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:12:17'!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !

!methodRemoval: MarsRoverObserverTest #test08MarsRoverWithNoChangeHeadingLogsNothing stamp: 'n 10/27/2022 00:12:21'!
test08MarsRoverWithNoChangeHeadingLogsNothing
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:''.
	
	self assert: 0 = logger logs size.
	
	!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:13:07'!
ERROR!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:13:07'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:14:35' prior: 50557810!
rotateLeft
	
	head rotateLeft.
	logger value: 'r'.! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:14:40'!
FAILURE!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:14:40'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:15:06' prior: 50559414!
rotateLeft
	
	head rotateLeft.
	logger value: 'l'.! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:15:11'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:15:24'!
test08MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:15:28' prior: 50559435!
test08MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:15:31' prior: 50559448!
test08MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:15:36'!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

!methodRemoval: MarsRoverObserverTest #test08MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:15:36'!
test08MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:16:17' prior: 50557814!
rotateRight
	
	head rotateRight.
	logger value: 'r'.! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:16:22'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:16:31' prior: 50559474!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'rr'.
	
	self assert: (2 = logger logs size and:((logger logs at: 2) = 'r' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:16:32'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:16:39' prior: 50559509!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'rrl'.
	
	self assert: (3 = logger logs size and:((logger logs at: 2) = 'l' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:16:40'!
FAILURE!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:16:40'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:16:48' prior: 50559526!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'rrl'.
	
	self assert: (3 = logger logs size and:((logger logs at: 3) = 'l' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:16:49'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:16:57' prior: 50559547!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 3) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:17:47' prior: 50559564!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 3) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:17:50' prior: 50559577!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:18:14' prior: 50559590!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addLogger:[:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObserver headingObserver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'n 10/27/2022 00:19:18'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObserver headingObserver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:19:47'!
addPositionObserver: aClousure
	positionObserver=aClousure! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:19:57'!
addHeadingObserver: aClousure
	headingObserver=aClousure! !

!methodRemoval: MarsRover #addLogger: stamp: 'n 10/27/2022 00:20:02'!
addLogger: aClousure
	logger:=aClousure!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:20:08' prior: 50559631!
addPositionObserver: aClousure
	positionObserver add: aClousure! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:20:12' prior: 50559635!
addHeadingObserver: aClousure
	headingObserver add:aClousure! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/27/2022 00:20:27' prior: 50557788!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self 
	! !
!MarsRover methodsFor: 'initialization' stamp: 'n 10/27/2022 00:20:52' prior: 50559653!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionObserver:= OrderedCollection  new.
	headingObserver:= OrderedCollection  new.
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:20:55'!
ERROR!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:20:55'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:21:03' prior: 50558151!
test01MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | self addLog: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:21:05'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:21:10' prior: 50558684!
test02MarsRoverWithOneMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger addLog: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:21:11'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:21:11'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:21:35' prior: 50559294!
moveWest
	
	position := position + (-1@0).
	positionObserver value: position.
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:21:43' prior: 50558858!
moveSouth
	
	position := position + (0@-1).
	positionObserver value: position.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:21:45' prior: 50558404!
moveNorth
	
	position := position + (0@1).
	positionObserver value: position.! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:21:49' prior: 50559186!
moveEast
	
	position := position + (1@0).
	positionObserver value: position.! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:21:59' prior: 50559500!
rotateRight
	
	head rotateRight.
	headingObserver value: 'r'.! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:22:03' prior: 50559426!
rotateLeft
	
	head rotateLeft.
	headingObserver value: 'l'.! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:22:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:22:08'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:22:08'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:22:30'!
ERROR!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:22:53'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:23:35' prior: 50559726!
moveNorth
	
	position := position + (0@1).
	positionObserver do: [ :aClousure| aClousure value: position]! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:23:40' prior: 50559720!
moveSouth
	
	position := position + (0@-1).
	positionObserver do: [ :aClousure| aClousure value: position]! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:23:44' prior: 50559714!
moveWest
	
	position := position + (-1@0).
	positionObserver do: [ :aClousure| aClousure value: position]
	! !
!MarsRover methodsFor: 'moving' stamp: 'n 10/27/2022 00:23:48' prior: 50559732!
moveEast
	
	position := position + (1@0).
	positionObserver do: [ :aClousure| aClousure value: position]! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:24:07' prior: 50559743!
rotateLeft
	
	head rotateLeft.
	headingObserver do: [ :aClousure| aClousure value: 'l'].! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 00:24:14' prior: 50559738!
rotateRight
	
	head rotateRight.
	headingObserver do: [ :aClousure| aClousure value: 'r'].! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:24:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:24:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:24:20'!
ERROR!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:24:20'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:24:28' prior: 50558762!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger addLog: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:24:29'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:24:33' prior: 50559000!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:24:34'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:24:40' prior: 50559019!
test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger addLog: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:24:42'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:24:48' prior: 50559238!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:24:50'!
FAILURE!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:24:50'!
FAILURE!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:00'!
FAILURE!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:00'!
FAILURE!

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:25:19' prior: 50559878!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger addLog: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:21'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:25:32' prior: 50559321!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger addLog: aPosition].
	marsRover process:'frf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:35'!
FAILURE!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:35'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:25:42' prior: 50559935!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger addLog: aPosition].
	marsRover process:'frf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:25:44'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:25:50' prior: 50559382!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:25:51'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:25:56' prior: 50559604!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:25:58'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:27:03' prior: 50559999!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:27:42' prior: 50560016!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	marsRover addPositionObserver: [:aHeading | logger addLog: aHeading].
	
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:27:49' prior: 50560030!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	marsRover addPositionObserver: [:aPosition | logger addLog: aPosition].
	
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:28:11' prior: 50560046!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	
	marsRover process:'rf'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:28:13' prior: 50560062!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger addLog: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:28:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:28:17'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09'!
observerUpdate: aPosition
	logs add:aPosition! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559914!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdate: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559858!
test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdate: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559961!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger observerUpdate: aPosition].
	marsRover process:'frf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559819!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdate: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559693!
test02MarsRoverWithOneMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger observerUpdate: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559677!
test01MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | self observerUpdate: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50560076!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdate: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559838!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdate: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:34:09' prior: 50559982!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdate: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !

!methodRemoval: Logger #addLog: stamp: 'n 10/27/2022 00:34:09'!
addLog: aPosition
	logs add:aPosition!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 00:34:14'!
PASSED!

----SNAPSHOT----(27 October 2022 00:50:44) CuisUniversity-5481.image priorSource: 7198233!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:51:31'!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdate: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'n 10/27/2022 00:53:34'!
Object subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:53:32' prior: 50560311!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	
	marsRover process:''.
	
	self assert: window = ''.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:53:39' prior: 50560332!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:''.
	self assert: window = ''.
	
	! !

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:53:43'!
FAILURE!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:53:43'!
FAILURE!

Object subclass: #Window
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'n 10/27/2022 00:54:08'!
Object subclass: #Window
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Window methodsFor: 'no messages' stamp: 'n 10/27/2022 00:54:52'!
observerUpdate: aPosition
	position:=aPosition! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:54:54' prior: 50560376!
observerUpdate: aPosition
	position:=aPosition.! !

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:55:00'!
FAILURE!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:55:00'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:55:10' prior: 50560345!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:''.
	self assert: window position = ''.
	
	! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:55:22'!
position
	^position! !

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:55:27'!
FAILURE!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:55:27'!
FAILURE!

window position!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:55:52' overrides: 16920235!
initialize
	position:=''! !

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:56:00'!
PASSED!

!methodRemoval: Window #observerUpdate: stamp: 'n 10/27/2022 00:56:25'!
observerUpdate: aPosition
	position:=aPosition.!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 00:56:35'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:56:58'!
test10MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = ''.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:57:03' prior: 50560433!
test10MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:57:10'!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test10MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 00:57:10'!
test10MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | Window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 00:57:13'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 00:57:13'!
ERROR!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:58:08'!
observerUpdate: aPosition
	position:=  aPosition x, '@',aPosition y.! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:59:32' prior: 50560492!
observerUpdate: aPosition
	position:=  (aPosition x asCharacter), '@',(aPosition y asCharacter).! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 00:59:34' prior: 50560498!
observerUpdate: aPosition
	position:=  (aPosition x asCharacter),'@',(aPosition y asCharacter).! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 00:59:39'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 00:59:39'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:00:10'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:00:15'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:00:26' prior: 50560459!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:00:30' prior: 50560394!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:''.
	self assert: window position = ''.
	
	! !

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:00:31'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:00:34'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:00:34'!
ERROR!

'a','b'!

'a','@' !

'a','@','ba'!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:01:27'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:01:27'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:01:35'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:01:51' prior: 50560526!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:02:09' prior: 50560504!
observerUpdate: aPosition
	position:=  (aPosition x asCharacter),(aPosition y asCharacter).! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:02:12'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:02:12'!
ERROR!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:02:39' prior: 50560589!
observerUpdate: aPosition
	position:=  (aPosition x asString),(aPosition y asString).! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:02:43' prior: 50560603!
observerUpdate: aPosition
	position:=  (aPosition x asString),'@',(aPosition y asString).! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:02:45'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:03:01' prior: 50560576!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'ff'.
	self assert: window position = '1@3'.
	
	! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:02'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:03:06' prior: 50560620!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'ffb'.
	self assert: window position = '1@2'.
	
	! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:08'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:03:14' prior: 50560637!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:03:24'!
test11MarsRoverWithForwardOneMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:24'!
test11MarsRoverWithForwardMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:25'!
ERROR!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithForwardMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:25'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:03:29'!
test11MarsRoverWithMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !

!testRun: #MarsRoverObserverTest #test11MarsRoverWithMovementLogsCorrectly stamp: 'n 10/27/2022 01:03:31'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:04:02' prior: 50560130!
observerUpdate: anUpdateValue
	logs add:anUpdateValue! !

!methodRemoval: MarsRoverObserverTest #test11MarsRoverWithForwardOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:04:28'!
test11MarsRoverWithForwardOneMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithMovementLogsCorrectly stamp: 'n 10/27/2022 01:04:33'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:04:41'!
test11MarsRoverWithOneMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test11MarsRoverWithMovementLogsCorrectly stamp: 'n 10/27/2022 01:04:41'!
test11MarsRoverWithMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:04:55'!
test11MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdate: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:05:07' prior: 50560763!
test11MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdate: aHeading].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:05:17' prior: 50560776!
test11MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdate: aHeading].
	marsRover process:'l'.
	self assert: window position = 'l'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:05:28'!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdate: aHeading].
	marsRover process:'l'.
	self assert: window position = 'l'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test11MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:05:28'!
test11MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdate: aHeading].
	marsRover process:'l'.
	self assert: window position = 'l'.
	
	!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:05:32'!
ERROR!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:05:32'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01'!
observerUpdatePosition: anUpdateValue
	logs add:anUpdateValue! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01'!
observerUpdatePosition: aPosition
	position:=  (aPosition x asString),'@',(aPosition y asString).! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560738!
test11MarsRoverWithOneMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdatePosition: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560801!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdatePosition: aHeading].
	marsRover process:'l'.
	self assert: window position = 'l'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560151!
test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560254!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdatePosition: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560183!
test03MarsRoverWithTwoMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'ff'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@3) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560167!
test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'frf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (2@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560135!
test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'flf'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (0@2) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560224!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdatePosition: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560238!
test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver:[:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'fb'.
	
	self assert: (2 = logger logs size and: ((logger logs at: 2) = (1@1) and: ((logger logs at: 1) = (1@2)))).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560212!
test01MarsRoverWithNoMovementsNoLogPosition	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | self observerUpdatePosition: aPosition].
	
	self assert: 0 = logger logs size.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560198!
test02MarsRoverWithOneMovementForwardHeadingNorth	
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | logger observerUpdatePosition: aPosition].
	marsRover process:'f'.
	
	self assert: (1 = logger logs size and: ((logger logs at: 1) = (1@2) )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:01' prior: 50560539!
test10MarsRoverWithNoMovementHasEmptyWindow
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdatePosition: aPosition].
	marsRover process:''.
	self assert: window position = ''.
	
	! !

!methodRemoval: Logger #observerUpdate: stamp: 'n 10/27/2022 01:06:01'!
observerUpdate: anUpdateValue
	logs add:anUpdateValue!

!methodRemoval: Window #observerUpdate: stamp: 'n 10/27/2022 01:06:01'!
observerUpdate: aPosition
	position:=  (aPosition x asString),'@',(aPosition y asString).!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:06:04'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:06:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:06:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:06:09'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:06:09'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:06:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:06:11'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:06:12'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:06:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:06:15'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:06:16'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:06:17'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:31' prior: 50560859!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window position = 'l'.
	
	! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:55'!
observerUpdateHeading: aHeading
	position:=  aHeading.! !

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'n 10/27/2022 01:06:59'!
Object subclass: #Window
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:06:58' prior: 50561091!
observerUpdateHeading: aHeading
	heading:=  aHeading.! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:03'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:03'!
FAILURE!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:07:17'!
heading
	^heading! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:21'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:21'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:07:28' prior: 50561079!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:32'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:07:36'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:36'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:07:42' prior: 50560951!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdateHeading: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'r' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:07:46' prior: 50560888!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdateHeading: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'l' )).
	
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
ERROR!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:07:54'!
ERROR!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:07:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:07:54'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:08:01'!
observerUpdateHeading: anUpdateValue
	logs add:anUpdateValue! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:08:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:06'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:08:21' prior: 50561128!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'lr'.
	self assert: window heading = 'lr'.
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:23'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:23'!
FAILURE!

window heading!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:08:43' prior: 50561327!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'lr'.
	self assert: window heading = 'r'.
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:08:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:43'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:08:49' prior: 50561349!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:08:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:08:56'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:09:13'!
test11MarsRoverWithOneMovementUpdateWindowCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdatePosition: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test11MarsRoverWithOneMovementLogsCorrectly stamp: 'n 10/27/2022 01:09:13'!
test11MarsRoverWithOneMovementLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addPositionObserver: [:aPosition | window observerUpdatePosition: aPosition].
	marsRover process:'f'.
	self assert: window position = '1@2'.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:09:20'!
test12MarsRoverWithOneHeadingWindowCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test12MarsRoverWithOneHeadingChangeLogsCorrectly stamp: 'n 10/27/2022 01:09:20'!
test12MarsRoverWithOneHeadingChangeLogsCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:09:29'!
test12MarsRoverWithOneHeadingUpdateWindowCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test12MarsRoverWithOneHeadingWindowCorrectly stamp: 'n 10/27/2022 01:09:29'!
test12MarsRoverWithOneHeadingWindowCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:09:30'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:09:45'!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneuslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:10:01'!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	! !

!methodRemoval: MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneuslyCorrectly stamp: 'n 10/27/2022 01:10:01'!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneuslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'l'.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:12:12' prior: 50561570!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: window heading = 'l'.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:12:14' prior: 50561599!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: window heading = ''.
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:12:15'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:12:15'!
FAILURE!

window heading!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:13:10' prior: 50561613!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:13:20' prior: 50561637!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'l' and:( window position = '1@2' )).
	
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:13:21'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:13:21'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:13:30'!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'l' and:( window position = '1@2' )).
	
	
	! !

!methodRemoval: MarsRoverObserverTest #test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:13:30'!
test12MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'l' and:( window position = '1@2' )).
	
	
	!
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:13:45' prior: 50560418 overrides: 16920235!
initialize
	position:=''.
	heading:=''! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:13:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:13:48'!
FAILURE!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:13:48'!
FAILURE!

window heading = '' !

window position!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:14:53' prior: 50561679!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'l' and:( window position = '1@2' )).
	
	
	! !

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:14:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:14:56'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:14:56'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 01:17:02' prior: 50559791!
rotateLeft
	
	head rotateLeft.
	headingObserver do: [ :aClousure| aClousure value: head].! !
!MarsRover methodsFor: 'heading' stamp: 'n 10/27/2022 01:17:08' prior: 50559797!
rotateRight
	
	head rotateRight.
	headingObserver do: [ :aClousure| aClousure value: head].! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:19:49' prior: 50561273!
observerUpdateHeading: aCardinalDirection
	logs add:aCardinalDirection direction! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:19:57' prior: 50560834!
observerUpdatePosition: aPosition
	logs add:aPosition! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:20:29' prior: 50561104!
observerUpdateHeading: aCardinalDirection
	heading:=  aCardinalDirection direction.
	
! !
!Window methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:20:40' prior: 50561882!
observerUpdateHeading: aCardinalDirection
	heading:= 'Apuntando al ', aCardinalDirection direction.
	
! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'n 10/27/2022 01:20:54'!
direction
	^'Oeste'! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'n 10/27/2022 01:21:05'!
direction
	^'Sur'! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'n 10/27/2022 01:21:28'!
direction
	^'Norte'! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'n 10/27/2022 01:21:38'!
direction
	^'Este'! !

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:21:49'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:21:56' prior: 50561211!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdateHeading: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'Este' )).
	
	! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:21:57'!
FAILURE!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:21:57'!
FAILURE!

logger logs!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:22:10' prior: 50561915!
test08MarsRoverWithLeftRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdateHeading: aHeading].
	marsRover process:'l'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'Oeste' )).
	
	! !

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:22:11'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:22:16' prior: 50561197!
test09MarsRoverWithRightRotationHeadingNorth
	| marsRover logger|
	
	logger:= Logger new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | logger observerUpdateHeading: aHeading].
	
	marsRover process:'r'.
	
	self assert: (1 = logger logs size and:((logger logs at: 1) = 'Este' )).
	
	! !

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:22:18'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:22:31' prior: 50561528!
test12MarsRoverWithOneHeadingUpdateWindowCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover process:'l'.
	self assert: window heading = 'Apuntando al Oeste'.
	
	! !

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:22:33'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:22:46' prior: 50561781!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'Apuntando al Oeste' and:( window position = '1@2' )).
	
	
	! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:22:48'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:22:48'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:24:55' prior: 50561991!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'rf'.
	self assert: (window heading = 'Apuntando al Oeste' and:( window position = '1@2' )).
	
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:24:57' prior: 50562066!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'r'.
	self assert: (window heading = 'Apuntando al Oeste' and:( window position = '1@2' )).
	
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:25:08' prior: 50562087!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'r'.
	self assert: (window heading = 'Apuntando al Este' and:( window position = '1@2' )).
	
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:25:17' prior: 50562108!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'r'.
	self assert: (window heading = 'Apuntando al Este' and:( window position = '1@2' )).
	
	marsRover process:'f'.
	self assert: (window heading = 'Apuntando al Este' and:( window position = '2@2' )).
	
	
	! !

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:25:18'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:25:26' prior: 50562129!
test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly
	| marsRover window|
	
	window:= Window new.
	marsRover := MarsRover at: 1@1 heading:self north. 
	marsRover addHeadingObserver: [:aHeading | window observerUpdateHeading: aHeading].
	marsRover addPositionObserver: [:aPostion | window observerUpdatePosition: aPostion].
	marsRover process:'f'.
	self assert: (window heading = '' and:( window position = '1@2' )).
	marsRover process:'l'.
	self assert: (window heading = 'Apuntando al Oeste' and:( window position = '1@2' )).
	
	! !

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:25:27'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:25:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:25:29'!
PASSED!

|aStream|
aStream := WriteStream!

|aStream|
aStream := WriteStream.
aStream nextPut:'a'.
aStream!

WriteStream!

|aStream|
aStream := WriteStream.
aStream next:'a'.
aStream!

|aStream|
aStream := WriteStream.
aStream!

|aStream|
aStream := WriteStream.
aStream nextPut: 'a'.!

aStream nextPut: 'a'.!

|aStream|
aStream := WriteStream.
aStream nextPutAll: OrderedCollection new.!

|aStream|
aStream := WriteStream new.
aStream nextPutAll: OrderedCollection new.!

|aStream|
aStream := WriteStream new.
!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:47:09' prior: 50558441 overrides: 16920235!
initialize
	logs:= WriteStream with: OrderedCollection new..! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:47:10' prior: 50562253 overrides: 16920235!
initialize
	logs:= WriteStream with: OrderedCollection new.! !

|aStream|
aStream := WriteStream with: OrderedCollection new.
aStream nextPut: 'aaa'.
!
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/27/2022 01:47:09' prior: 50562259 overrides: 16920235!
initialize
	logs:= WriteStream with: OrderedCollection new..! !
!Logger methodsFor: 'as yet unclassified' stamp: 'n 10/26/2022 23:48:42' prior: 50562268 overrides: 16920235!
initialize
	logs:= OrderedCollection new.! !

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:48:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:48:10'!
PASSED!

|aStream|
aStream:= WriteStream with: OrderedCollection  new.
aStream nextPut: 'aaa'.
aStream newLineCharacter .!

|aStream|
aStream:= WriteStream with: OrderedCollection  new.
aStream nextPut: 'aaa'.!

|aStream|
aStream:= WriteStream with: OrderedCollection  new.
aStream nextPut: 'aaa'.
aStream next.!

|aStream|
aStream:= WriteStream with: OrderedCollection  new.
aStream nextPut: 'aaa'.
aStream newLine.!

|aStream|
aStream:= WriteStream with: OrderedCollection  new.
aStream nextPut: 'aaa'.
aStream newLine.
aStream nextPut: 'bbb'.
aStream newLine.
!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:51:54'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'n 10/27/2022 01:54:13'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MarsRoverWithNoMovementsNoLogPosition stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverWithOneMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MarsRoverWithTwoMovementForwardHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test04MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test05MarsRoverWithOneMovementForwardAndOneBackWardsHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MarsRoverWithOneMovementForwardALeftRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test07MarsRoverWithOneMovementForwardARightRotationAndOneForwardsHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test08MarsRoverWithLeftRotationHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MarsRoverWithRightRotationHeadingNorth stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MarsRoverWithNoMovementHasEmptyWindow stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MarsRoverWithOneMovementUpdateWindowCorrectly stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MarsRoverWithOneHeadingUpdateWindowCorrectly stamp: 'n 10/27/2022 01:54:17'!
PASSED!

!testRun: #MarsRoverObserverTest #test13MarsRoverWithOneMovementOneHeadingUpdateWindowSimultaneouslyCorrectly stamp: 'n 10/27/2022 01:54:17'!
PASSED!

----SNAPSHOT----(27 October 2022 01:54:38) CuisUniversity-5481.image priorSource: 7317012!